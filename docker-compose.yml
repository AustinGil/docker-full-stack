version: "3"
services:
  # node:
  #   build:
  #     context: .
  #     dockerfile: ./node/Dockerfile
  #   volumes:
  #     - ./node:/node
  #   # ports:
  #   #   - ${PORT}:${PORT}
  #   depends_on:
  #     - mysql
  #   environment:
  #     DB_HOST: mysql # target container name
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   restart: always
  #   expose:
  #     - ${NODE_PORT}

  # mysql:
  #   image: mysql:5.7
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   volumes:
  #     - ./mysql:/var/lib/mysql
  #   # ports:
  #   #   - ${MYSQL_PORT}:${MYSQL_PORT}
  #   restart: always
  #   expose:
  #     - ${MYSQL_PORT}

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx
      - ./certbot/certs/:/etc/letsencrypt
      - ./certbot/certs-data:/data/letsencrypt
      - ./www:/data/www
    ports:
      - 80:80
      - 443:443
    # depends_on:
    #   - node
    restart: always
    tty: true

  certbot:
    # image: certbot/certbot
    # image: ubuntu
    build:
      context: .
      dockerfile: ./certbot/Dockerfile
    volumes:
      - ./certbot:/test
    # links:
    #   - nginx
    environment:
      DOMAIN: ${DOMAIN}
      EMAIL: ${EMAIL}
    tty: true
